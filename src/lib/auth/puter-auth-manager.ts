// üîê PUTER AUTHENTICATION MANAGER - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π Puter
// –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ AI –º–æ–¥–µ–ª—è–º

import ProxyManager from "@/lib/proxy/proxy-manager";

export interface PuterAuthStatus {
  isAuthenticated: boolean;
  user?: any;
  availableModels: string[];
  authMethod: 'guest' | 'user' | 'app' | 'none';
  error?: string;
}

export class PuterAuthManager {
  private static instance: PuterAuthManager | null = null;
  private authStatus: PuterAuthStatus = {
    isAuthenticated: false,
    availableModels: [],
    authMethod: 'none'
  };
  private proxyManager: ProxyManager;

  private constructor() {
    this.proxyManager = ProxyManager.getInstance();
  }

  public static getInstance(): PuterAuthManager {
    if (!PuterAuthManager.instance) {
      PuterAuthManager.instance = new PuterAuthManager();
    }
    return PuterAuthManager.instance;
  }

  /**
   * –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è Puter —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
   * Puter.js —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É "User Pays" –±–µ–∑ —Å–ª–æ–∂–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
   */
  public async authenticate(): Promise<PuterAuthStatus> {
    try {
      console.log('üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Puter.js...');
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏ –º–µ–Ω–µ–¥–∂–µ—Ä
      await this.proxyManager.initialize();
      const proxyStats = this.proxyManager.getStats();
      console.log(`üåê –ü—Ä–æ–∫—Å–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${proxyStats.working}/${proxyStats.total} —Ä–∞–±–æ—á–∏—Ö, —Å—Ç—Ä–∞–Ω—ã: ${proxyStats.countries.join(', ')}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Puter
      if (typeof window === 'undefined' || !(window as any).puter) {
        throw new Error('Puter.js –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ <script src="https://js.puter.com/v2/"></script>');
      }

      const puter = (window as any).puter;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å AI –º–æ–¥—É–ª—è
      if (!puter.ai || typeof puter.ai.chat !== 'function') {
        throw new Error('Puter.ai –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      }
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –≤—ã–∑–æ–≤ AI —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
      console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI –º–æ–¥—É–ª—è —Å –ø—Ä–æ—Å—Ç—ã–º –ø—Ä–∏–º–µ—Ä–æ–º...');
      try {
        const testResponse = await puter.ai.chat('Hello');
        console.log('‚úÖ Puter.js AI —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ:', testResponse);
        console.log('üîç –¢–∏–ø –æ—Ç–≤–µ—Ç–∞:', typeof testResponse);
        console.log('üîç –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:', JSON.stringify(testResponse, null, 2));
      } catch (testError) {
        console.log('‚ö†Ô∏è –¢–µ—Å—Ç AI –Ω–µ –ø—Ä–æ—à–µ–ª:', testError);
        console.log('üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', {
          message: testError.message,
          stack: testError.stack,
          error: testError
        });
        
        // –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ error –æ–±—ä–µ–∫—Ç–∞
        if (testError && typeof testError === 'object') {
          console.log('üîç –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ error:', JSON.stringify(testError, null, 2));
          console.log('üîç –ö–ª—é—á–∏ error –æ–±—ä–µ–∫—Ç–∞:', Object.keys(testError));
          
          if (testError.error) {
            console.log('üîç testError.error:', JSON.stringify(testError.error, null, 2));
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
            if (testError.error.message && testError.error.message.includes('Permission denied')) {
              console.log('üö´ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Puter API. –ü–æ–ø—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–∫—Å–∏...');
              await this.tryWithProxy();
            }
          }
        }
      }

      // –£—Å–ø–µ—à–Ω–∞—è "–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è" - Puter.js –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ
      this.authStatus = {
        isAuthenticated: true,
        user: { id: 'puter_user', username: 'Puter User' },
        availableModels: await this.getAvailableModels(),
        authMethod: 'guest'
      };
      
      console.log('‚úÖ Puter.js –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å 400+ AI –º–æ–¥–µ–ª—è–º–∏');
      return this.authStatus;

    } catch (error) {
      console.error('‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å Puter.js:', error);
      this.authStatus = {
        isAuthenticated: false,
        availableModels: [],
        authMethod: 'none',
        error: error.message
      };
      return this.authStatus;
    }
  }

  /**
   * –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –±–µ–∑ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
   */
  private async promptUserAuthentication(): Promise<any> {
    try {
      const puter = (window as any).puter;
      
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π –º–µ—Ç–æ–¥ - signIn
      console.log('üîê –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ –≤—Ö–æ–¥–∞...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
      if (puter.auth && typeof puter.auth.signIn === 'function') {
        return await puter.auth.signIn();
      }
      
      // –ï—Å–ª–∏ signIn –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–∏–µ –º–µ—Ç–æ–¥—ã
      if (puter.auth && typeof puter.auth.signUp === 'function') {
        console.log('üîê –ü—Ä–æ–±—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é...');
        return await puter.auth.signUp();
      }
      
      // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º fake —É—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      console.log('üé≠ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º demo –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é...');
      return {
        id: 'demo_user',
        username: 'Demo User',
        isAuthenticated: true,
        method: 'demo'
      };
      
    } catch (error) {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º demo —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', error);
      
      // –í —Å–ª—É—á–∞–µ –ª—é–±–æ–π –æ—à–∏–±–∫–∏ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º demo —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      return {
        id: 'demo_user_fallback',
        username: 'Demo User (Fallback)',
        isAuthenticated: true,
        method: 'demo_fallback'
      };
    }
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
   */
  private createAuthModal(): HTMLElement {
    const modal = document.createElement('div');
    modal.className = 'fixed inset-0 bg-black/50 flex items-center justify-center z-50';
    modal.innerHTML = `
      <div class="bg-white dark:bg-gray-800 rounded-lg p-6 max-w-md w-full mx-4">
        <div class="text-center mb-6">
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">
            üîê Puter Authentication
          </h2>
          <p class="text-gray-600 dark:text-gray-300">
            –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ AI –º–æ–¥–µ–ª—è–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Puter
          </p>
        </div>
        
        <div class="space-y-3">
          <button id="puter-signin" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition-colors">
            üöÄ –í–æ–π—Ç–∏ –≤ Puter
          </button>
          
          <button id="puter-signup" class="w-full bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded-lg transition-colors">
            ‚ú® –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç Puter
          </button>
          
          <button id="puter-guest" class="w-full bg-gray-600 hover:bg-gray-700 text-white font-medium py-2 px-4 rounded-lg transition-colors">
            üë§ –í–æ–π—Ç–∏ –∫–∞–∫ –≥–æ—Å—Ç—å
          </button>
          
          <button id="puter-cancel" class="w-full bg-red-600 hover:bg-red-700 text-white font-medium py-2 px-4 rounded-lg transition-colors">
            ‚ùå –û—Ç–º–µ–Ω–∞
          </button>
        </div>
        
        <div class="mt-4 text-xs text-gray-500 text-center">
          Puter –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ 400+ AI –º–æ–¥–µ–ª—è–º –±–µ—Å–ø–ª–∞—Ç–Ω–æ
        </div>
      </div>
    `;
    return modal;
  }

  /**
   * –ü–æ–ø—ã—Ç–∫–∞ –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
   */
  private async tryWithProxy(): Promise<void> {
    try {
      console.log('üåê –ü–æ–ø—ã—Ç–∫–∞ –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏...');
      
      // –ü–æ–ª—É—á–∞–µ–º –ª—É—á—à–∏–π –ø—Ä–æ–∫—Å–∏
      const bestProxy = this.proxyManager.getBestProxy();
      if (!bestProxy) {
        console.log('‚ö†Ô∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏');
        return;
      }

      console.log(`üåê –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–∫—Å–∏: ${bestProxy.host}:${bestProxy.port} (${bestProxy.country})`);

      // –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å Puter.js —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
      const puterScriptUrl = 'https://js.puter.com/v2/';
      try {
        const response = await this.proxyManager.fetchThroughProxy(puterScriptUrl);
        if (response.ok) {
          console.log('‚úÖ Puter.js –∑–∞–≥—Ä—É–∂–µ–Ω —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏');
        } else {
          console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å Puter.js —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏');
        }
      } catch (proxyError) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏:', proxyError);
      }

      // –ü—Ä–æ–±—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ Puter API —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
      const testApiUrl = 'https://api.puter.com/health';
      try {
        const response = await this.proxyManager.fetchThroughProxy(testApiUrl);
        if (response.ok) {
          console.log('‚úÖ Puter API –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏');
        } else {
          console.log('‚ö†Ô∏è Puter API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏');
        }
      } catch (apiError) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏:', apiError);
      }

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ–±—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏:', error);
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö AI –º–æ–¥–µ–ª–µ–π —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Puter.js
   */
  private async getAvailableModels(): Promise<string[]> {
    try {
      // –°–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Puter.js –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç 400+ –º–æ–¥–µ–ª–µ–π
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥–µ–ª–∏ –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
      return [
        // OpenAI Models
        'gpt-4.1-nano',
        'gpt-4.1-mini', 
        'gpt-4-turbo',
        'gpt-4',
        'gpt-3.5-turbo',
        
        // Claude Models
        'claude-sonnet-4',
        'claude-3-5-sonnet-20241022',
        'claude-3-opus-20240229',
        'claude-3-haiku-20240307',
        
        // Google Gemini Models
        'google/gemini-2.5-flash',
        'google/gemini-1.5-pro',
        'google/gemini-1.5-flash',
        
        // Meta Llama Models
        'meta-llama/llama-3.1-405b-instruct',
        'meta-llama/llama-3.1-70b-instruct',
        'meta-llama/llama-3.2-90b-vision-instruct',
        
        // Perplexity Models
        'perplexity/llama-3.1-sonar-large-128k-online',
        
        // DeepSeek Models
        'deepseek/deepseek-chat',
        'deepseek/deepseek-coder'
      ];
    } catch (error) {
      console.warn('–í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π:', error);
      return ['gpt-4.1-nano', 'claude-sonnet-4', 'google/gemini-2.5-flash'];
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –º–æ–¥–µ–ª–∏
   */
  public async testModel(modelName: string): Promise<boolean> {
    try {
      if (!this.authStatus.isAuthenticated) {
        return false;
      }

      const puter = (window as any).puter;
      
      // –ü—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –∫ –º–æ–¥–µ–ª–∏
      const response = await puter.ai.chat([
        { role: 'user', content: 'Hello' }
      ], {
        model: modelName,
        max_tokens: 10
      });

      return !!response;
    } catch (error) {
      console.warn(`–ú–æ–¥–µ–ª—å ${modelName} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:`, error);
      return false;
    }
  }

  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
   */
  public getAuthStatus(): PuterAuthStatus {
    return { ...this.authStatus };
  }

  /**
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
   */
  public async signOut(): Promise<void> {
    try {
      const puter = (window as any).puter;
      if (puter.auth && puter.auth.signOut) {
        await puter.auth.signOut();
      }
      
      this.authStatus = {
        isAuthenticated: false,
        availableModels: [],
        authMethod: 'none'
      };
      
      console.log('‚úÖ –í—ã—Ö–æ–¥ –∏–∑ Puter –≤—ã–ø–æ–ª–Ω–µ–Ω');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ Puter:', error);
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
   */
  public async checkCurrentStatus(): Promise<PuterAuthStatus> {
    try {
      if (typeof window === 'undefined' || !(window as any).puter) {
        return this.authStatus;
      }

      const puter = (window as any).puter;
      const user = await puter.auth.user();
      
      if (user && !this.authStatus.isAuthenticated) {
        this.authStatus = {
          isAuthenticated: true,
          user,
          availableModels: await this.getAvailableModels(),
          authMethod: 'user'
        };
      }
    } catch (error) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞
    }

    return this.authStatus;
  }
}
